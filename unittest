unittest 主要分为 Test Case,Test Suite,Test Runner,Test Fixture 4块

Test case 分为setUp,run,tearDown 三块，分别对应开始,操作内容,结束

Test Suite 用于构建测试集合 
例如：
suite = unittest.TestSuite()
suite.addTest()

Test Running 用于执行测试集合 
例如：
runner = unittest.TextTestRunner()
runner.run()

Test Fuxture 初始化测试环境

unittest 断言方法
assertEqual(a, b)	          判断ab是否相等
assertNotEqual(a, b)	      判断ab不相等
assertIs(a, b)　	           判断a是b
assertIsNot(a, b)	          判断a不是b
assertIsNone(a)	            判断a是不是None
assertIsNotNone(a)	        判断a不是None
assertIn(a,b)	              判断a在b中，此时a与b可以相等
assertNotIn(a, b)	          判断a不在b中
assertIsInstance(a, b)	    判断a是否属于b的实例
assertNotIsInstance(a, b)	  判断a不属于b的实例 
assertGreater(a, b)	        判断a > b
assertGreaterEqual(a, b)	  判断a >= b 
assertLess(a, b)	          判断a < b 
assertLessEqual(a, b)	      判断a <= b 
例如：
def test_case(self):
    self.assertEqual()

discover 同时执行多个测试用例
discover = unittest.defaultTestLoader.discover("路径",pattern = "test*.py")   *表示任意字符
runner = unittest.TextTestRunner()
runner.run(discover)

如何执行多级目录的用例: 在每个子目录下放一个__init__.py文件

跳过测试和预期失败：
unittest.skip(reason) 无条件跳过装饰测试,并说明跳过原因
unittest.skipIf(condition,reason) 当条件condition为真时,跳过装饰测试
unittest.skipUnless(condition,reason) 当条件condition为假时，跳过装饰测试
unittest.expectedFailure() 测试标记为失败，无论结果如何，统一标记为失败

fixtures:
setUpModule/tearDownModule   在整个模块开始和结束的时候执行
